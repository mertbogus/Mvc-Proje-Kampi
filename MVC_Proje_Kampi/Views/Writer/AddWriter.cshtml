@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Yeni Yazar Ekleme</h2>
<br />
@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))
{
    <form class="form-group" method="post">
        @Html.Label("Yazar Adı")
        <br />
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName, "", new { @class = "text-danger" })
        <br />
        @Html.Label("Yazar Soyadı")
        <br />
        @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurname, "", new { @class = "text-danger" })
        <br />
        @Html.Label("Yazar Mail")
        <br />
        @Html.TextBoxFor(x => x.Mail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Mail, "", new { @class = "text-danger" })
        <br />
        @Html.Label("Yazar Şifresi")
        <br />
        @Html.TextBoxFor(x => x.MWriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.MWriterPassword, "", new { @class = "text-danger" })
        @Html.Label("Yazar Görseli")
        <br />
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage, "", new { @class = "text-danger" })
        <br />
        @Html.Label("Yazar Hakkında")
        <br />
        @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout, "", new { @class = "text-danger" })

        <button class="btn btn-primary">Yazarı Ekle</button>
    </form>
}
