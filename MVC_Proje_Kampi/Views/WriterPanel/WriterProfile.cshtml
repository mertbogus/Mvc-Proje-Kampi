@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}
<h1>Profilinizi Düzenleyin</h1>
@using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post))
{
    <div class="form-group">
        @Html.HiddenFor(x => x.WriterId, new { @class = "form-control" })

        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName, null, new { @class = "text-danger" })
        <br />
        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurname)
        <br />
        @Html.Label("Yazar Ünvanı")
        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterTitle)
        <br />
        @Html.Label("Yazar Mail")
        @Html.TextBoxFor(x => x.Mail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Mail)
        <br />
        @Html.Label("Yazar Şifresi")
        @Html.TextBoxFor(x => x.MWriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.MWriterPassword)
        <br />
        @Html.Label("Yazar Hakkında")
        @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout)
        <br />
        @Html.Label("Yazar Görsel Linki")
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage)
        <br />
        <button class="btn btn-info">Yazarı Güncelle</button>
    </div>
}

